name: Python Pipeline

on: [push]

jobs:

  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Test the Python script "lambda_function.py"
        run: python lambda_function.py
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are any Flake 8 issues
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 .
      - name: Unit Tests
        run: |
          # Run unittest 
          python -m unittest "unit_tests.py"
  package-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Make the directory
        run: |
          mkdir -p ./artifacts/${{ github.repository }}
          ls ${{ github.workspace }}
      - name: Create Zip File
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r package.zip lambda_function.py
      - name: Move file to artifacts directory
        run: mv package.zip ./artifacts
      - name: List files in the artifacts directory
        run: |
          cd ./artifacts && ls
      
      - name: Push Zip to S3
        uses: jakejarvis/s3-sync-action@v0.3.1
        env:
          SOURCE_DIR: './artifacts/.'
          AWS_REGION: 'us-east-1'
          AWS_S3_BUCKET: 'printed-documents'
          AWS_ACCESS_KEY_ID: 'ASIAYJCKGV2T52PBAOU4'
          AWS_SECRET_ACCESS_KEY: 'yVFrGsaDIV8lXVJVWm+gAOll1z0MWU6VAUpE1oPM'
          AWS_SESSION_TOKEN: 'FwoGZXIvYXdzEG8aDBm/kycCCGJrwqgXmyK+AeCF3QUr+k8rbY03RKbh1aFJpC75cNyTOoMgJ0VNdp2T3Oig5HKAWfuu3m8L2GyoCbycRccRka/f95VsxlnQM7OTe+XKcge90FxsPSPEMI6Wb3QRa1RbmNz2Hwa0n9MDo8lY61wVnHmRUoPp3ZtMQsoZlEQAtZwe6Y0a67MauWAVsoXZeGZAwZS4r+miYjvlUxfrhxp4p8Z+PYSdfheq3AyZeI07tHl4PKoRGtkNW+zpZGNx47fYfA5tphmT9eooz/aBiAYyLZ6ILb0MTWaEIswRWm+jJXSyXqclO6GAs1RqwIqIIaSbimQq30iB9Z0J6m+8Dw=='
      - name: Job Stats
        run: echo "üçè This job's status is ${{ job.status }}."
